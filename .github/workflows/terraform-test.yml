name: "Terraform Tests"

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

jobs:
  validate:
    name: "Validate Terraform"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Azure CLI Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init -backend=false

      - name: Terraform Validate
        run: terraform validate

  test:
    name: "Run Tests"
    needs: validate
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/requirements.txt

      - name: Test Core Modules
        run: python tests/infrastructure_test.py --ci --test-type modules --output test_results_modules.json

      - name: Test Backend
        run: python tests/infrastructure_test.py --ci --test-type backend --output test_results_backend.json

      - name: Test All Environments
        run: python tests/infrastructure_test.py --ci --test-type all-env --output test_results_allenv.json

      - name: Test Dev
        run: python tests/infrastructure_test.py --ci --test-type dev --output test_results_dev.json

      - name: Test Staging
        run: python tests/infrastructure_test.py --ci --test-type staging --output test_results_staging.json

      - name: Test Production
        run: python tests/infrastructure_test.py --ci --test-type prod --output test_results_prod.json

      - name: Upload Test Logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-logs
          path: logs/

  deploy:
    name: "Deploy Infrastructure"
    needs: [validate, test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve