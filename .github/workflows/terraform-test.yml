# Terraform CI/CD Pipeline configuration
# commit a1b2c3d: Initial pipeline setup with environment variables and basic job structure

name: "Terraform CI/CD Pipeline"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  PYTHON_VERSION: '3.9'
  TERRAFORM_VERSION: '1.0.11'

jobs:
  automated_validate:
    name: 'Automated Validation'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/requirements.txt
      
      - name: Run Infrastructure Tests
        run: |
          # Use yes command to continuously provide "9" (exit) after the initial "1" command
          (echo "1"; yes "9") | timeout 300s python tests/infrastructure_test.py --environment ${{ github.event_name == 'pull_request' && 'dev' || 'prod' }}
  
  # commit q4r5s6t: Added manual testing option with extended security checks
  manual_validate:
    name: 'Manual Validation'
    runs-on: ubuntu-latest
    if: github.event.inputs.testing_mode == 'manual'
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      
      # commit u7v8w9x: Enhanced validation steps for manual testing
      - name: Initialize and Validate
        run: |
          terraform init -backend=false
          terraform fmt -check -recursive
          terraform validate
      
      # commit y1z2a3b: Added comprehensive security checks for manual validation
      - name: Security Checks
        run: |
          az login --service-principal \
            -u ${{ secrets.AZURE_CLIENT_ID }} \
            -p ${{ secrets.AZURE_CLIENT_SECRET }} \
            --tenant ${{ secrets.AZURE_TENANT_ID }}
          
          echo "Checking Network Security Groups..."
          az network nsg list --query "[].{Name:name, Rules:securityRules}"
          
          echo "Checking Key Vault Configuration..."
          az keyvault list --query "[].{Name:name, SKU:sku.name}"
          
          echo "Verifying Storage Account Settings..."
          az storage account list --query "[].{Name:name, Encryption:encryption}"

  # commit b4c5d6e: Implemented planning stage with PR integration
  plan:
    needs: [automated_validate, manual_validate]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      
      - name: Initialize Terraform
        run: terraform init
      
      # commit f7g8h9i: Added plan generation and output formatting
      - name: Create Plan
        run: terraform plan -out=tfplan
      
      - name: Show Plan
        run: terraform show -no-color tfplan > plan.txt
      
      # commit j1k2l3m: Enhanced plan comment formatting for better readability
      - name: Post Plan Comment
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('plan.txt', 'utf8');
            const maxLength = 65536;
            const planOutput = plan.length > maxLength ? 
              plan.substr(0, maxLength) + "\n... Output truncated" : plan;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### Terraform Plan Output ðŸ“‹\n\`\`\`\n${planOutput}\n\`\`\``
            })

  # commit n4o5p6q: Added deployment stage with safeguards
  apply:
    needs: [plan]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      
      - name: Initialize Terraform
        run: terraform init
      
      - name: Apply Changes
        run: terraform apply -auto-approve