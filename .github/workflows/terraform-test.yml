name: "Terraform Tests"

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: "26fa681b-266b-4a85-b7f0-d0b40312d4e0" # Hardcoded for now
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  TF_LOG: DEBUG
  PYTHONUNBUFFERED: 1

jobs:
  test:
    name: "Run Tests"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Azure CLI Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Test Staging Environment
        run: |
          echo "=== Testing Staging Environment ==="
          if [ ! -d "environments/staging" ]; then
            echo "Staging environment directory not found. Skipping..."
            exit 0
          fi
          cd environments/staging
          echo "Running Terraform Init..."
          terraform init -no-color -backend=false > staging_init.log 2>&1 || { cat staging_init.log; exit 1; }

          echo "Running Terraform Validate..."
          terraform validate -no-color > staging_validate.log 2>&1 || { cat staging_validate.log; exit 1; }

          echo "Running Terraform Plan..."
          terraform plan -no-color -input=false -var-file=terraform.tfvars > staging_plan.log 2>&1 || {
            echo "=== Plan Failed ==="
            echo "Debugging Output:"
            cat staging_plan.log
            TF_LOG=DEBUG terraform plan -no-color -input=false -var-file=terraform.tfvars > staging_debug.log 2>&1
            cat staging_debug.log
            exit 1
          }

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: staging-test-logs
          path: environments/staging/*.log